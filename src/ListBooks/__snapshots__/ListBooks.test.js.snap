// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListBooks
    books={
        Array [
            Object {
              "authors": Array [
                "Santos, Guilherme",
              ],
              "shelf": "read",
              "title": "My Book",
            },
          ]
    }
    onUpdateBook={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="list-books-title"
>
          <h1>
                    MyReads
          </h1>
</div>,
        <div
          className="list-books-content"
>
          <Bookshelf
                    books={Array []}
                    onUpdateBook={[Function]}
                    title="Currently Reading"
          />
          <Bookshelf
                    books={Array []}
                    onUpdateBook={[Function]}
                    title="Want to Read"
          />
          <Bookshelf
                    books={
                              Array [
                                        Object {
                                          "authors": Array [
                                            "Santos, Guilherme",
                                          ],
                                          "shelf": "read",
                                          "title": "My Book",
                                        },
                                      ]
                    }
                    onUpdateBook={[Function]}
                    title="Read"
          />
</div>,
        <div
          className="open-search"
>
          <Link
                    replace={false}
                    to="/search"
          >
                    Add a book
          </Link>
</div>,
      ],
      "className": "list-books",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            MyReads
</h1>,
          "className": "list-books-title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "MyReads",
          },
          "ref": null,
          "rendered": "MyReads",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Bookshelf
              books={Array []}
              onUpdateBook={[Function]}
              title="Currently Reading"
/>,
            <Bookshelf
              books={Array []}
              onUpdateBook={[Function]}
              title="Want to Read"
/>,
            <Bookshelf
              books={
                            Array [
                                          Object {
                                            "authors": Array [
                                              "Santos, Guilherme",
                                            ],
                                            "shelf": "read",
                                            "title": "My Book",
                                          },
                                        ]
              }
              onUpdateBook={[Function]}
              title="Read"
/>,
          ],
          "className": "list-books-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "currentlyReading",
            "nodeType": "function",
            "props": Object {
              "books": Array [],
              "onUpdateBook": [Function],
              "title": "Currently Reading",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "wantToRead",
            "nodeType": "function",
            "props": Object {
              "books": Array [],
              "onUpdateBook": [Function],
              "title": "Want to Read",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "read",
            "nodeType": "function",
            "props": Object {
              "books": Array [
                Object {
                  "authors": Array [
                    "Santos, Guilherme",
                  ],
                  "shelf": "read",
                  "title": "My Book",
                },
              ],
              "onUpdateBook": [Function],
              "title": "Read",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/search"
>
            Add a book
</Link>,
          "className": "open-search",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Add a book",
            "replace": false,
            "to": "/search",
          },
          "ref": null,
          "rendered": "Add a book",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="list-books-title"
>
            <h1>
                        MyReads
            </h1>
</div>,
          <div
            className="list-books-content"
>
            <Bookshelf
                        books={Array []}
                        onUpdateBook={[Function]}
                        title="Currently Reading"
            />
            <Bookshelf
                        books={Array []}
                        onUpdateBook={[Function]}
                        title="Want to Read"
            />
            <Bookshelf
                        books={
                                    Array [
                                                Object {
                                                  "authors": Array [
                                                    "Santos, Guilherme",
                                                  ],
                                                  "shelf": "read",
                                                  "title": "My Book",
                                                },
                                              ]
                        }
                        onUpdateBook={[Function]}
                        title="Read"
            />
</div>,
          <div
            className="open-search"
>
            <Link
                        replace={false}
                        to="/search"
            >
                        Add a book
            </Link>
</div>,
        ],
        "className": "list-books",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              MyReads
</h1>,
            "className": "list-books-title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "MyReads",
            },
            "ref": null,
            "rendered": "MyReads",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Bookshelf
                books={Array []}
                onUpdateBook={[Function]}
                title="Currently Reading"
/>,
              <Bookshelf
                books={Array []}
                onUpdateBook={[Function]}
                title="Want to Read"
/>,
              <Bookshelf
                books={
                                Array [
                                                Object {
                                                  "authors": Array [
                                                    "Santos, Guilherme",
                                                  ],
                                                  "shelf": "read",
                                                  "title": "My Book",
                                                },
                                              ]
                }
                onUpdateBook={[Function]}
                title="Read"
/>,
            ],
            "className": "list-books-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "currentlyReading",
              "nodeType": "function",
              "props": Object {
                "books": Array [],
                "onUpdateBook": [Function],
                "title": "Currently Reading",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "wantToRead",
              "nodeType": "function",
              "props": Object {
                "books": Array [],
                "onUpdateBook": [Function],
                "title": "Want to Read",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "read",
              "nodeType": "function",
              "props": Object {
                "books": Array [
                  Object {
                    "authors": Array [
                      "Santos, Guilherme",
                    ],
                    "shelf": "read",
                    "title": "My Book",
                  },
                ],
                "onUpdateBook": [Function],
                "title": "Read",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/search"
>
              Add a book
</Link>,
            "className": "open-search",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Add a book",
              "replace": false,
              "to": "/search",
            },
            "ref": null,
            "rendered": "Add a book",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders without crashing when hasnt books 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListBooks
    onUpdateBook={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="list-books-title"
>
          <h1>
                    MyReads
          </h1>
</div>,
        <div
          className="list-books-content"
>
          <p
                    align="center"
          >
                    Loading books...
          </p>
</div>,
        <div
          className="open-search"
>
          <Link
                    replace={false}
                    to="/search"
          >
                    Add a book
          </Link>
</div>,
      ],
      "className": "list-books",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            MyReads
</h1>,
          "className": "list-books-title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "MyReads",
          },
          "ref": null,
          "rendered": "MyReads",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <p
            align="center"
>
            Loading books...
</p>,
          "className": "list-books-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "align": "center",
            "children": "Loading books...",
          },
          "ref": null,
          "rendered": "Loading books...",
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/search"
>
            Add a book
</Link>,
          "className": "open-search",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Add a book",
            "replace": false,
            "to": "/search",
          },
          "ref": null,
          "rendered": "Add a book",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="list-books-title"
>
            <h1>
                        MyReads
            </h1>
</div>,
          <div
            className="list-books-content"
>
            <p
                        align="center"
            >
                        Loading books...
            </p>
</div>,
          <div
            className="open-search"
>
            <Link
                        replace={false}
                        to="/search"
            >
                        Add a book
            </Link>
</div>,
        ],
        "className": "list-books",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              MyReads
</h1>,
            "className": "list-books-title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "MyReads",
            },
            "ref": null,
            "rendered": "MyReads",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <p
              align="center"
>
              Loading books...
</p>,
            "className": "list-books-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "align": "center",
              "children": "Loading books...",
            },
            "ref": null,
            "rendered": "Loading books...",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/search"
>
              Add a book
</Link>,
            "className": "open-search",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "Add a book",
              "replace": false,
              "to": "/search",
            },
            "ref": null,
            "rendered": "Add a book",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
